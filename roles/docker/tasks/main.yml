---
# https://docs.docker.com/install/linux/docker-ce/ubuntu/
- name: Install prerequisites for Docker
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
  become: yes
  tags: [docker]

- name: Get Ubuntu release codename
  shell: lsb_release -cs
  changed_when: no
  check_mode: no
  register: release
  tags: [docker]

- block:
    - name: Install Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ release.stdout }} stable
        state: present
        filename: docker
        update_cache: yes
      become: yes
      tags: [docker]

  rescue:
    - name: Install Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes
      tags: [docker]

    - name: Install Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ release.stdout }} stable
        state: present
        filename: docker
        update_cache: yes
      become: yes
      tags: [docker]

- name: Install Docker CE
  apt:
    name: docker-ce
    state: latest
  become: yes
  tags: [docker]

# This allows running docker commands without sudo
# Run su - $USER to make it take effect immediately (https://superuser.com/a/354475/93066)
- name: Add user to docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  become: yes
  tags: [docker]

- name: Disable iptables integration
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
  become: yes
  notify: Restart docker
  tags: [docker]

- name: Install Docker Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.21.2/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 0755
  become: yes
  tags: [docker]

- name: Create cron job to disable auto restart of containers
  cron:
    name: Disable auto restart of docker containers
    minute: "0"
    hour: "17"
    job: "for container_id in $(docker container ls -aq); do docker update --restart=no $container_id; done"
  tags: [docker]

- name: Create cron job to stop running containers
  cron:
    name: Stop running docker containers
    minute: "5"
    hour: "17"
    job: "for container_id in $(docker container ls -aq); do docker container stop $container_id; done"
  tags: [docker]

- name: Configure Docker service
  service:
    name: docker.service
    enabled: "{{ (docker_enable_service is defined) and (docker_enable_service | bool == true) }}"
  become: yes
  tags: [docker]

- name: Configure Docker socket
  service:
    name: docker.socket
    enabled: "{{ (docker_enable_service is defined) and (docker_enable_service | bool == true) }}"
  become: yes
  tags: [docker]
