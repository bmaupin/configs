---
- name: Install dependencies (Ubuntu <= 18.04)
  apt:
    name: python-gpg
    state: present
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('18.04', '<=')
  tags: [dropbox]

- name: Install dependencies (Ubuntu >= 20.04)
  apt:
    name: python3-gpg
    state: present
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('20.04', '>=')
  tags: [dropbox]

- name: Install Dropbox GPG key
  apt_key:
    url: https://linux.dropbox.com/fedora/rpm-public-key.asc
    keyring: /etc/apt/trusted.gpg.d/dropbox.gpg
  become: yes
  tags: [dropbox]

- name: Install Dropbox repository
  apt_repository:
    # For whatever reason, disco (19.04) is the latest repo (https://linux.dropboxstatic.com/ubuntu/dists/)
    repo: deb [arch=i386,amd64] http://linux.dropbox.com/ubuntu disco main
    state: present
    filename: dropbox
    update_cache: yes
  become: yes
  tags: [dropbox]

- name: Install Dropbox
  apt:
    name: dropbox
  become: yes
  tags: [dropbox]

# If this task keeps getting run, open the Dropbox UI and uncheck *Start Dropbox on system startup*
- name: Disable default autostart
  shell: dropbox autostart n
  args:
    removes: ~/.config/autostart/dropbox.desktop
  tags: [dropbox]

- name: Clean up old custom autostart files
  file:
    path: '{{ item }}'
    state: absent
  loop:
    - ~/.config/autostart/dropbox-delayed.desktop
    - ~/.config/autostart/dropbox-fixed.desktop
  tags: [dropbox]

# We have to use a custom desktop file because the default one (dropbox.desktop) is managed by the Dropbox app and will
# be deleted or overwritten
- name: Copy custom autostart file
  copy:
    src: /usr/share/applications/dropbox.desktop
    dest: ~/.config/autostart/dropbox-custom.desktop
    force: no
  ignore_errors: '{{ ansible_check_mode }}'
  tags: [dropbox]

# Dropbox hijacks io when it's first starting up, even with renice. So wait a bit before starting it
- name: Wait a bit before automatically starting Dropbox
  replace:
    path: ~/.config/autostart/dropbox-custom.desktop
    regexp: '^Exec=.*'
    replace: "Exec=sh -c 'sleep 300; dropbox start -i && sleep 10 && renice +19 $(pgrep dropbox)'"
  ignore_errors: '{{ ansible_check_mode }}'
  tags: [dropbox]

# We can't use the ansible find module because it can only filter on the basename portion of the path
- name: Find node_modules directories
  # Ignore nested node_modules directories
  shell: find ~/Dropbox -type d -name node_modules | egrep -v "node_modules/.*/node_modules" || true
  changed_when: no
  check_mode: no
  register: dropbox_node_modules_directories
  tags: [dropbox]

# Unfortunately ignoring files and directories has to be done on each Dropbox client
- name: Ignore node_modules directories
  xattr:
    path: '{{ item }}'
    key: com.dropbox.ignored
    value: '1'
  loop: '{{ dropbox_node_modules_directories.stdout_lines }}'
  tags: [dropbox]
