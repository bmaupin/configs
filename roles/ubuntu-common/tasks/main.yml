---
- name: Do encrypted tasks
  import_tasks: vault.yml
  tags: [ubuntu-common]

- name: Configure firewall
  import_tasks: ufw.yml
  tags: [ubuntu-common]

- name: Remove undesired packages
  apt:
    name:
      - apt-xapian-index
      - empathy
      - evolution
    state: absent
    purge: yes
  become: yes
  tags: [ubuntu-common]

- name: Install desired packages
  apt:
    name:
      - mpv
      # Symlinks /usr/bin/python to python3
      - python-is-python3
      - vim
    state: present
  become: yes
  tags: [ubuntu-common]

# This happens any time there are crash report files in /var/crash (https://askubuntu.com/a/1161174/18665)
- name: Disable annoying System program problem detected popup
  service:
    name: apport.service
    enabled: no
  become: yes
  tags: [ubuntu-common]

# It would still be good to know if there are any crash reports so we can clean them up
- name: Fail if there are any crash reports in /var/crash
  find:
    paths: /var/crash
  register: result
  failed_when: result.files != []
  tags: [ubuntu-common]

- name: Copy .vimrc
  copy:
    src: .vimrc
    dest: ~/.vimrc
    backup: yes
  tags: [ubuntu-common]

# https://unix.stackexchange.com/a/19320/14436
- name: Enable colour support in less by default
  lineinfile:
    path: ~/.bashrc
    line: 'alias less="less -R"'
  tags: [ubuntu-common]

# https://superuser.com/questions/36022/getting-colored-results-when-using-a-pipe-from-grep-to-less
- name: Create an alias for grep with colour support
  lineinfile:
    path: ~/.bashrc
    line: 'alias grepc="grep --color=always"'
  tags: [ubuntu-common]

- name: Remove grub recovery menu entry
  replace:
    path: /etc/default/grub
    regexp: '^#GRUB_DISABLE_RECOVERY="true"$'
    replace: 'GRUB_DISABLE_RECOVERY="true"'
    backup: yes
  become: yes
  notify: Update grub
  tags: [ubuntu-common]

- name: Remove grub memory test menu entry
  file:
    path: /etc/grub.d/20_memtest86+
    mode: 'a-x'
  become: yes
  notify: Update grub
  tags: [ubuntu-common]

# Gets the release number, e.g. 22.04
- name: Get Ubuntu release number
  shell: lsb_release -rs
  changed_when: no
  check_mode: no
  register: release
  tags: [ubuntu-common]

# This allows us to run newer kernels on LTS versions of Ubuntu
# https://wiki.ubuntu.com/Kernel/LTSEnablementStack
- name: Install the HWE kernel
  apt:
    name: linux-generic-hwe-{{ release.stdout }}
    install_recommends: yes
  become: yes
  tags: [ubuntu-common]

- name: Copy .eslintrc
  copy:
    src: .eslintrc
    dest: ~/.eslintrc
    backup: yes
  tags: [ubuntu-common]

# Defaults to 4 GB or 10% of disk space
# https://www.freedesktop.org/software/systemd/man/journald.conf.html#SystemMaxUse=
# To see used space: journalctl --disk-usage
- name: Limit size of systemd journal
  replace:
    path: /etc/systemd/journald.conf
    regexp: '^(#)?SystemMaxUse=.*'
    replace: 'SystemMaxUse=1G'
  become: yes
  tags: [ubuntu-common]

# Among other things, screen sharing on Teams is still broken on Wayland. There's no
# urgency to switch just yet
# https://technoracle.com/how-to-fix-zoom-screen-sharing-on-ubuntu-22-04-quickly/
- name: Disable Wayland on login screen
  replace:
    path: /etc/gdm3/custom.conf
    regexp: '^#WaylandEnable=false'
    replace: 'WaylandEnable=false'
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '<=')
  tags: [ubuntu-common]

# Work around this bug: https://bugs.launchpad.net/snap-store-desktop/+bug/1998233
#
# See also: https://askubuntu.com/questions/1443069/how-to-prevent-snap-store-from-automatically-starting
#
# I don't even use snap-store, so it's all the more annoying when I start my computer and
# I'm greeted with this popup, caused by a pending update of snap-store, which is set to
# automatically start at boot:
#
# > Pending update of "snap-store" snap
# >
# > Close the app to avoid disruptions
#
# The cause seems to be this file: ~/snap/snap-store/current/.config/autostart/ubuntu-software-service.desktop
#
# To test this:
#
# 1. List all available versions of snap-store
#
#    ```
#    snap list --all snap-store
#    ```
#
# 1. Install an older version, e.g.
#
#    ```
#    sudo snap refresh snap-store --revision 582
#    ```
#
# 1. Open snap-store (Ubuntu Software in the app menu)
# 1. Enable more frequent automatic updates
#
#    ```
#    sudo snap set system refresh.timer=00:00~24:00/96
#    ```
#
#    This will force snap to auto update every 15 minutes. To see the next update:
#
#    ```
#    snap refresh --time
#    ```
#
# 1. Log out and log back in
# 1. Immediately open up a terminal and type this command
#
#    ```
#    while true; do ps -ef | grep [s]nap-store; sleep 1; done
#    ```
#
# 1. Once snap-store is killed, run this command to watch snap-store for updates
#
#    ```
#    while true; do date; snap list snap-store; sleep 60; done
#    ```
#
# 1. Reset the automatic update timer
#
#    ```
#    sudo snap set system refresh.timer!
#    ```
#
- name: Disable snap-store autostart
  copy:
    src: stop-snap-store.desktop
    dest: /etc/xdg/autostart/stop-snap-store.desktop
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '<=')
  tags: [ubuntu-common]

# TODO: I have no idea what the status of snap-store autostart is any more
#       (https://bugs.launchpad.net/snap-store-desktop/+bug/1998233/comments/8)
- name: Delete snap-store autostart override
  file:
    path: /etc/xdg/autostart/stop-snap-store.desktop
    state: absent
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '>')
  tags: [ubuntu-common]

# TODO: Delete this task once it's been run everywhere
- name: Delete old snap-store desktop file
  file:
    path: ~/.config/autostart/ubuntu-software-service.desktop
    state: absent
  tags: [ubuntu-common]

- name: Get the list of kernel headers that can be uninstalled
  shell: dpkg -l | grep linux-header | egrep -v "linux-headers-generic" | egrep -v $(dpkg -l | grep linux-image | grep ^i | awk '{print $2}' | cut -d - -f 3,4 | egrep -v generic | sort -u | head -c -1 | tr '\n' '|') | awk '{ print $2 }'
  register: kernel_headers_to_uninstall
  changed_when: no
  tags: [ubuntu-common]

- name: Purge old kernel headers
  apt:
    name: '{{ item }}'
    state: absent
    purge: yes
  loop: '{{ kernel_headers_to_uninstall.stdout_lines }}'
  become: yes
  tags: [ubuntu-common]

# We could also just do this in one shell command, e.g. apt -y purge $(dpkg -l | egrep "^ic|^rc" | awk '{ print $2 }' | egrep "^linux-image|^linux-modules" | tr '\n' ' ')
# But by having separate commands we can see exactly what's uninstalled/partially installed
- name: Get the list of kernel packages that can be purged
  shell: dpkg -l | egrep "^ic|^rc" | awk '{ print $2 }' | egrep "^linux-image|^linux-modules" || true
  register: kernel_packages_to_purge
  changed_when: no
  tags: [ubuntu-common]

- name: Purge uninstalled/partially installed kernel packages
  apt:
    name: '{{ item }}'
    state: absent
    purge: yes
  loop: '{{ kernel_packages_to_purge.stdout_lines }}'
  become: yes
  tags: [ubuntu-common]

# https://askubuntu.com/a/1434762/18665
- name: Disable Ubuntu Pro message when using apt
  copy:
    content: ''
    dest: /etc/apt/apt.conf.d/20apt-esm-hook.conf
  become: true
  tags: [ubuntu-common]

# Ideally this should run after all other apt tasks in this role
- name: Apt autoremove
  apt:
    autoremove: yes
    purge: yes
  become: yes
  register: result
  changed_when: result.stdout.find(' 0 to remove') == -1
  tags: [ubuntu-common]
