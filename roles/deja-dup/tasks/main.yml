---
- name: Install Deja Dup
  apt:
    name:
      - deja-dup
    state: present
  become: yes
  tags: [deja-dup]

- name: Set backup location to network server
  dconf:
    key: /org/gnome/deja-dup/backend
    value: "'remote'"
  tags: [deja-dup]

- name: Keep backups for a maximum of 2 years
  dconf:
    key: /org/gnome/deja-dup/delete-after
    value: "730"
  tags: [deja-dup]

- name: Configure folders to ignore
  dconf:
    key: /org/gnome/deja-dup/exclude-list
    value: "[\
        '$TRASH',
        '$DOWNLOAD',
        '/home/{{ ansible_user_id }}/Desktop/Pile',
        '/home/{{ ansible_user_id }}/Dropbox'\
      ]"
  tags: [deja-dup]

- name: Configure frequency of full backups
  dconf:
    key: /org/gnome/deja-dup/full-backup-period
    value: "180"
  tags: [deja-dup]

- name: Configure folders to backup
  dconf:
    key: /org/gnome/deja-dup/include-list
    value: "[\
        '/home/{{ ansible_user_id }}/.config/dconf',
        '/home/{{ ansible_user_id }}/.ssh',
        '/home/{{ ansible_user_id }}/Desktop'
        '/home/{{ ansible_user_id }}/Documents',
        '/home/{{ ansible_user_id }}/Music',
        '/home/{{ ansible_user_id }}/Pictures',
        '/home/{{ ansible_user_id }}/Videos'\
      ]"
  tags: [deja-dup]

- name: Enable automatic backups
  dconf:
    key: /org/gnome/deja-dup/periodic
    value: "true"
  tags: [deja-dup]

- name: Set network server folder
  dconf:
    key: /org/gnome/deja-dup/remote/folder
    value: "''"
  tags: [deja-dup]

- name: Set network server URI
  dconf:
    key: /org/gnome/deja-dup/remote/uri
    value: "'smb:{{ deja_dup_remote_location }}'"
  tags: [deja-dup]

# Deja Dup's /org/gnome/deja-dup/delete-after setting only deletes old backups when the drive runs out of space
- name: Configure cron job to delete old backups
  cron:
    name: Delete old Deja Dup backups
    special_time: monthly
    user: root
    job: >
      /bin/mkdir -p /mnt/backup &&
      /bin/mount -t cifs
      -o username={{ deja_dup_remote_user }},password={{ deja_dup_remote_password }},uid=$(id -u {{ ansible_user_id }}),gid=$(id -g {{ ansible_user_id }})
      {{ deja_dup_remote_location }}
      /mnt/backup/ &&
      /usr/bin/sudo -i -u {{ ansible_user_id }} /usr/bin/duplicity remove-older-than 18M --force file:///mnt/backup/;
      /bin/sleep 5;
      /bin/umount /mnt/backup &&
      /bin/rmdir /mnt/backup
    cron_file: delete-old-deja-dup-backups
  become: yes
  tags: [deja-dup]
