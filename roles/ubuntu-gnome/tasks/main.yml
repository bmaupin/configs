---
- name: Remove undesired snap packages
  snap:
    name:
      - gnome-3-28-1804
      - gnome-3-34-1804
      - gnome-calculator
      - gnome-characters
    state: absent
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('20.04', '>=')
  tags: [ubuntu-gnome]

# If this task fails, do: sudo snap refresh snap-store --channel=latest/stable/ubuntu-22.04
- name: Remove undesired snap packages
  snap:
    name:
      - core18
    state: absent
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '>=')
  tags: [ubuntu-gnome]

- name: Set theme (Ubuntu 22.04)
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - { key: /org/gnome/desktop/interface/color-scheme, value: "'prefer-dark'" }
    - { key: /org/gnome/desktop/interface/gtk-theme, value: "'Yaru-dark'" }
    - { key: /org/gnome/gedit/preferences/editor/scheme, value: "'Yaru-dark'" }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '=')
  notify: Restart Gnome Shell
  tags: [ubuntu-gnome]

- name: Set theme (Ubuntu 24.04)
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - { key: /org/gnome/desktop/interface/color-scheme, value: "'prefer-dark'" }
    - { key: /org/gnome/desktop/interface/gtk-theme, value: "'Yaru-dark'" }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [ubuntu-gnome]

- name: Set compose key
  dconf:
    key: /org/gnome/desktop/input-sources/xkb-options
    value: "['compose:ralt']"
  tags: [ubuntu-gnome]

- name: Disable animations
  dconf:
    key: /org/gnome/desktop/interface/enable-animations
    value: 'false'
  tags: [ubuntu-gnome]

- name: Set screen inactivity timeout
  dconf:
    key: /org/gnome/desktop/session/idle-delay
    value: 'uint32 900'
  tags: [ubuntu-gnome]

- name: Allow workspaces on all displays
  dconf:
    key: /org/gnome/mutter/workspaces-only-on-primary
    value: 'false'
  tags: [ubuntu-gnome]

- name: Configure Desktop Icons NG extension
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    # Don't show home icon on desktop
    - { key: /org/gnome/shell/extensions/ding/show-home, value: 'false' }
    # Put new icons in top left (default is bottom right)
    - {
        key: /org/gnome/shell/extensions/ding/start-corner,
        value: "'top-left'",
      }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '>=')
    - ansible_distribution_version is version('24.04', '<=')
  tags: [ubuntu-gnome]

- name: Enable delete in file manager
  dconf:
    key: /org/gnome/nautilus/preferences/show-delete-permanently
    value: 'true'
  tags: [ubuntu-gnome]

- name: Configure night light
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - {
        key: /org/gnome/settings-daemon/plugins/color/night-light-schedule-automatic,
        value: 'false',
      }
    - {
        key: /org/gnome/settings-daemon/plugins/color/night-light-schedule-to,
        value: 6.5,
      }
    - {
        key: /org/gnome/settings-daemon/plugins/color/night-light-schedule-from,
        value: 21.0,
      }
    - {
        key: /org/gnome/settings-daemon/plugins/color/night-light-enabled,
        value: 'true',
      }
  tags: [ubuntu-gnome]

# Transparent dock is particularly distracting with auto-hide since the dock will show on
# top of whatever is on the screen
- name: Make dock non-transparent
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - {
        key: /org/gnome/shell/extensions/dash-to-dock/background-opacity,
        value: '1.0',
      }
    - {
        key: /org/gnome/shell/extensions/dash-to-dock/transparency-mode,
        value: "'FIXED'",
      }
  tags: [ubuntu-gnome]

- name: Auto-hide dock
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    # This is the default value but we'll set it explicitly just to be safe
    - { key: /org/gnome/shell/extensions/dash-to-dock/autohide, value: 'true' }
    - {
        key: /org/gnome/shell/extensions/dash-to-dock/dock-fixed,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/dash-to-dock/intellihide,
        value: 'false',
      }
  tags: [ubuntu-gnome]

- name: Hide trash and unmounted volume icons on dock
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - {
        key: /org/gnome/shell/extensions/dash-to-dock/show-mounts-only-mounted,
        value: 'true',
      }
    - {
        key: /org/gnome/shell/extensions/dash-to-dock/show-trash,
        value: 'false',
      }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '>=')
    - ansible_distribution_version is version('24.04', '<=')
  tags: [ubuntu-gnome]

- name: Isolate windows to each workspace
  dconf:
    key: '{{ item }}'
    value: 'true'
  loop:
    - /org/gnome/shell/app-switcher/current-workspace-only
    - /org/gnome/shell/extensions/dash-to-dock/isolate-workspaces
  tags: [ubuntu-gnome]

- name: Install prerequisites for Gnome Shell system monitor extension
  apt:
    name: gir1.2-gtop-2.0
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '>=')
    - ansible_distribution_version is version('24.04', '<=')
  tags: [ubuntu-gnome]

- name: Install Gnome Shell system-monitor extension
  script: install-gnome-shell-extension-system-monitor.sh
  args:
    creates: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/system-monitor@paradoxxx.zero.gmail.com/"
  notify: Restart Gnome Shell
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '=')
  tags: [ubuntu-gnome]

# This could be done using the dconf module but the dconf item is a list of all installed
# extensions and dconf can't modify just a single item in that list
- name: Enable Gnome Shell system-monitor extension
  shell: >
    if gsettings get org.gnome.shell enabled-extensions | grep -q system-monitor@paradoxxx.zero.gmail.com; then
      echo "System monitor extension already enabled"
    else
      gnome-extensions enable system-monitor@paradoxxx.zero.gmail.com
    fi
  register: result
  changed_when: result.stdout.find("System monitor extension already enabled") == -1
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '=')
  tags: [ubuntu-gnome]

- name: Configure Gnome Shell system-monitor extension
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - {
        key: /org/gnome/shell/extensions/system-monitor/cpu-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/cpu-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/disk-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/disk-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/icon-display,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/memory-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/memory-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/net-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/net-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/swap-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor/swap-show-text,
        value: 'false',
      }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '=')
  tags: [ubuntu-gnome]

- name: Install Gnome Shell system-monitor-next extension
  script: install-gnome-shell-extension-system-monitor-next.sh
  args:
    creates: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/system-monitor-next@paradoxxx.zero.gmail.com/"
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [ubuntu-gnome]

# This could be done using the dconf module but the dconf item is a list of all installed
# extensions and dconf can't modify just a single item in that list
- name: Enable Gnome Shell system-monitor-next extension
  shell: >
    if gsettings get org.gnome.shell enabled-extensions | grep -q system-monitor-next@paradoxxx.zero.gmail.com; then
      echo "System monitor extension already enabled"
    else
      gnome-extensions enable system-monitor-next@paradoxxx.zero.gmail.com
    fi
  register: result
  changed_when: result.stdout.find("System monitor extension already enabled") == -1
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [ubuntu-gnome]

- name: Configure Gnome Shell system-monitor-next extension
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/cpu-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/cpu-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/disk-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/disk-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/icon-display,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/memory-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/memory-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/net-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/net-show-text,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/swap-graph-width,
        value: 50,
      }
    - {
        key: /org/gnome/shell/extensions/system-monitor-next-applet/swap-show-text,
        value: 'false',
      }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [ubuntu-gnome]

# Local extensions can get out of date fast and conflict with extensions installed from packages (https://askubuntu.com/a/1346532/18665)
- name: Warn if there are any Gnome extensions installed locally
  find:
    paths: ~/.local/share/gnome-shell/extensions/
    file_type: directory
  register: result
  failed_when: result.files != []
  # Hack to show a warning instead of an error (https://stackoverflow.com/a/63557091/399105)
  ignore_errors: True
  tags: [ubuntu-gnome]

# This ensures that Gnome gets restarted even if Ansible aborts due to an error in another role
- name: Flush handlers
  meta: flush_handlers
  tags: [ubuntu-gnome]
