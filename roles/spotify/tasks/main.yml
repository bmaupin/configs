---
# snap is slow, clutters the mounts, and clutters the home folder
- name: Uninstall Spotify snap
  snap:
    name: spotify
    state: absent
  become: yes
  tags: [spotify]

# NOTE: This often doesn't delete keys, possibly a bug with the ansible module
- name: Clean up old Spotify GPG keys
  ansible.builtin.apt_key:
    id: '{{ item }}'
    keyring: /etc/apt/trusted.gpg.d/spotify.gpg
    state: absent
  with_items:
    # Valid IDs: full 40-character key ID, last 16 characters, or last 8 characters
    - 0D811D58
    - 5E3C45D7B312C643
    - 7A3A762FAFD4A51F
    - 6224F9941A8AA6D1
  become: yes
  tags: [spotify]

# NOTE: If this task fails:
#       1. Add the old key ID to the previous task
#       2. Get the latest key URL from https://www.spotify.com/us/download/linux/ and
#          update it below
- name: Install Spotify GPG key
  ansible.builtin.apt_key:
    url: https://download.spotify.com/debian/pubkey_C85668DF69375001.gpg
    keyring: /etc/apt/trusted.gpg.d/spotify.gpg
  become: yes
  tags: [spotify]

- name: Install Spotify repository
  apt_repository:
    repo: deb http://repository.spotify.com stable non-free
    state: present
    filename: spotify
    update_cache: yes
  become: yes
  tags: [spotify]

- name: Install Spotify
  apt:
    name: spotify-client
    state: latest
  become: yes
  tags: [spotify]

# NOTE: If we run into an issue again where Spotify freezes where there probably should've been an ad, use mitmproxy to debug
# https://www.theverge.com/2019/2/7/18215845/spotify-ad-blockers-terms-of-service
# To set up debugging of DNS logs (prerequisite for below): https://unix.stackexchange.com/a/432077/14436
#   To undo DNS debugging: sudo systemctl revert systemd-resolved
# To see which domains are being blocked:
# 1. Make a note of when Spotify was opened (in case it's doing DNS caching, it might only do DNS request once)
# 2. Clear old logs
#    sudo journalctl --vacuum-time=1d
# 3. List all hosts that have been looked up that are blocked in /etc/hosts
#    for hostname in $(sudo journalctl -u systemd-resolved | grep "Looking up RR" | awk '{print $10}' | sort -u); do grep "\s$hostname$" /etc/hosts | egrep -v '^#'; done
# 4. See when that host was actually blocked
#    sudo journalctl -u systemd-resolved | grep hostname
- name: Make sure Spotify ads aren't blocked
  lineinfile:
    path: /etc/hosts
    regexp: '^#?{{ item | regex_escape() }}'
    line: '#{{ item }}'
  loop:
    - 0.0.0.0 pagead.l.doubleclick.net
    - 0.0.0.0 spclient.wg.spotify.com
  become: yes
  tags: [spotify]

- name: Install extension to lower volume of ads
  shell: |
    gdbus call --session \
           --dest org.gnome.Shell.Extensions \
           --object-path /org/gnome/Shell/Extensions \
           --method org.gnome.Shell.Extensions.InstallRemoteExtension \
           "spotify-ad-block@danigm.net"
  args:
    creates: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/spotify-ad-block@danigm.net/"
  register: extension_install
  until: extension_install.rc == 0
  retries: 5
  delay: 10
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [spotify]

- name: Configure Gnome Shell extension
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - {
        key: /org/gnome/shell/extensions/spotify-ad-blocker/ad-volume-percentage,
        value: 60,
      }
    - {
        key: /org/gnome/shell/extensions/spotify-ad-blocker/show-indicator,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/spotify-ad-blocker/unmute-delay,
        value: 1500,
      }
    - {
        key: /org/gnome/shell/extensions/spotify-ad-blocker/volume-before-ads,
        value: -1,
      }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [spotify]
