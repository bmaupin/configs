---
- name: Install smbios-utils
  apt:
    name: smbios-utils
  become: yes
  tags: [office-laptop]

- name: Get battery charging configuration
  shell: smbios-battery-ctl --get-charging-cfg
  changed_when: no
  check_mode: no
  register: result
  become: yes
  tags: [office-laptop]

- name: Set charging mode to custom
  shell: smbios-battery-ctl --set-charging-mode=custom
  when: "result.stdout_lines[0] != 'Charging mode: custom'"
  become: yes
  tags: [office-laptop]

# Upper bound must be at least 56 as per https://github.com/dell/libsmbios/issues/101
- name: Set custom charge interval
  shell: smbios-battery-ctl --set-custom-charge-interval=75 80
  when: "result.stdout_lines[1] is not defined or result.stdout_lines[1] != 'Charging interval: (75, 80)'"
  become: yes
  tags: [office-laptop]

# This overrides the Gnome battery icon to match the custom charge interval so that when
# the maximum charge is reached, Gnome won't show that the battery is still charging
#
# NOTE:
# - If this is changed, reinstall yaru-theme-icon to restore the original icons (sudo apt install --reinstall yaru-theme-icon)
#   - We could also just add that command as a notify action of the previous task ...
- name: Override battery icon when fully charged
  copy:
    src: /usr/share/icons/Yaru/scalable/status/battery-level-{{ item }}-symbolic.svg
    dest: /usr/share/icons/Yaru/scalable/status/battery-level-{{ item }}-charging-symbolic.svg
    force: yes
  loop:
    # Icons are available at every power of 10, so we need to modify the icon for the min and max charging intervals, rounding down
    - 70
    - 80
  become: yes
  notify: Restart Gnome Shell
  tags: [office-laptop]

- name: Copy system Pulseaudio configuration to user
  copy:
    src: /etc/pulse/default.pa
    dest: ~/.config/pulse/default.pa
    # Don't override if it already exists
    force: false
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '=')
  tags: [office-laptop]

# This will favour previously selected audio sinks over newly connected ones (e.g. docking stations)
- name: Disable switching audio sink when a new device is connected
  replace:
    path: ~/.config/pulse/default.pa
    regexp: '(.ifexists module-switch-on-connect.so)\n(load-module module-switch-on-connect)\n(.endif)'
    replace: '#\1\n#\2\n#\3'
  notify: Restart pulseaudio
  # Later versions of Ubuntu switched to pipewire
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('22.04', '=')
  tags: [office-laptop]

- name: Disable Ubuntu Tiling Assistant
  shell: >
    if gsettings get org.gnome.shell disabled-extensions | grep -q tiling-assistant@ubuntu.com; then
      echo "Ubuntu Tiling Assistant already disabled"
    else
      gnome-extensions disable tiling-assistant@ubuntu.com
    fi
  register: result
  changed_when: result.stdout.find("Ubuntu Tiling Assistant already disabled") == -1
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [office-laptop]

- name: Install Tiling Shell extension
  shell: |
    gdbus call --session \
           --dest org.gnome.Shell.Extensions \
           --object-path /org/gnome/Shell/Extensions \
           --method org.gnome.Shell.Extensions.InstallRemoteExtension \
           "tilingshell@ferrarodomenico.com"
  args:
    creates: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/tilingshell@ferrarodomenico.com/"
  register: extension_install
  until: extension_install.rc == 0
  retries: 5
  delay: 10
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [office-laptop]

- name: Configure Tiling Shell extension
  dconf:
    key: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - {
        key: /org/gnome/shell/extensions/tilingshell/enable-snap-assist,
        value: 'false',
      }
    - {
        key: /org/gnome/shell/extensions/tilingshell/inner-gaps,
        value: 'uint32 0',
      }
    - {
        key: /org/gnome/shell/extensions/tilingshell/outer-gaps,
        value: 'uint32 0',
      }
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [office-laptop]

- name: Disable firmware updater service
  service:
    name: fwupd
    enabled: no
    state: stopped
  become: yes
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('24.04', '=')
  tags: [office-laptop]
