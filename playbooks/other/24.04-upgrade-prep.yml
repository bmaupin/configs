# Instructions:
#
# 1. Run the appropriate playbook in the parent directory
#
#     e.g. ansible-playbook playbooks/home-desktop.yml
#
# 1. Check to make sure there's enough disk space available for the upgrade
#
#    df -h
#
#    ⚠️ Remove as much as possible! Wine, OpenJDK, Chrome, Firefox, anything that can easily be installed later. I freed up 6 GB and it still ran out of space.
#
#    1. Use Disk Analyzer to free up disk space as needed. Some common commands:
#
#       sudo apt autoremove --purge
#       sudo apt clean
#       snap list --all | while read snapname ver rev trk pub notes; do if [[ $notes = *disabled* ]]; then sudo snap remove "$snapname" --revision="$rev"; fi; done
#
# 1. Run this playbook
#
#    ansible-playbook playbooks/other/24.04-upgrade-prep.yml
#
# 1. Upgrade Ubuntu
#
#    1. Open Software Updater, and the upgrade prompt should pop up. If not, log out and try again.
#
# 1. Restore favourite (pinned) apps in the dock
#
#    gsettings set org.gnome.shell favorite-apps "$(cat ~/Desktop/tmp-24.04-upgrade/gsettings-backup-22.04.txt | grep favorite-apps | cut -d ' ' -f 3-)"
#
# 1. Restore deja-dup backup dates
#
#    grep "org.gnome.DejaDup" ~/Desktop/tmp-24.04-upgrade/gsettings-backup-22.04.txt | grep Z\'$ | while read -r line; do echo "gsettings set $line"; gsettings set $line; done
#
# 1. Go through all Ansible tasks with version restrictions and update as needed
#
#    e.g. ansible_distribution_version is version('22.04', '=')
#
# 1. Save ubuntu-gnome for last as it typically requires the most customisations, e.g.
#
#    ansible-playbook playbooks/... --skip ubuntu-gnome
#
# 1. Dump vanilla dconf
#
#    dconf dump / > ~/Desktop/tmp-24.04-upgrade/dconf-backup-24.04.txt
#
# 1. Change Gnome as desired and diff dconf
#
#    diff ~/Desktop/tmp-24.04-upgrade/dconf-backup-24.04.txt <(dconf dump /)
#
# 1. Test just the Gnome playbook, e.g.
#
#    ansible-playbook playbooks/... --tags ubuntu-gnome
#
# 1. Run backups (if applicable)
---
- hosts: 127.0.0.1

  tasks:
    - name: Remove custom packages for 22.04
      apt:
        name:
          - firefox
          - gir1.2-gtop-2.0
        state: absent
        purge: yes
      become: yes
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Apt autoremove
      apt:
        autoremove: yes
        purge: yes
      become: yes
      register: result
      changed_when: result.stdout.find(' 0 to remove') == -1
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Create backup directory
      file:
        path: ~/Desktop/tmp-24.04-upgrade
        state: directory
        mode: '0755'

    - name: Back up dconf settings with gsettings
      shell: gsettings list-recursively | sort > ~/Desktop/tmp-24.04-upgrade/gsettings-backup-22.04.txt
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Back up dconf settings with dconf
      shell: dconf dump / > ~/Desktop/tmp-24.04-upgrade/dconf-backup-22.04.txt
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Back up list of apt packages
      shell: dpkg -l > ~/Desktop/tmp-24.04-upgrade/dpkg-l-22.04.txt
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Back up list of snap packages
      shell: snap list > ~/Desktop/tmp-24.04-upgrade/snap-list-22.04.txt
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Back up network settings
      shell: ifconfig > ~/Desktop/tmp-24.04-upgrade/ifconfig-22.04.txt
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Reset dconf settings
      shell: dconf reset -f /
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Set screen inactivity timeout
      dconf:
        key: /org/gnome/desktop/session/idle-delay
        value: 'uint32 900'
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')

    - name: Remove Gnome Shell system monitor extension directory
      file:
        path: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/system-monitor@paradoxxx.zero.gmail.com"
        state: absent
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version is version('22.04', '=')
